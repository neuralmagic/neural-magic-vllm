#include <stddef.h>
#include "../scaled_mm_c2x.cuh"
#include "../common.hpp"

void {{ _name }}(torch::Tensor &out, torch::Tensor const &a,
                torch::Tensor const &b,
                torch::Tensor const &a_scales,
                torch::Tensor const &b_scales,
                c10::optional<torch::Tensor> const& bias) {

  using TileShape = {{ _tile_shape }};
  using WarpShape = {{ _warp_shape }};
  using InstructionShape = {{ _instruction_shape }};
  using ThreadBlockSwizzle = {{ _thread_block_swizzle }};
  using FP8MathOperator = {{ _fp8_math_operator }};
  static const cutlass::gemm::GemmUniversalMode GemmMode = {{ _gemm_mode }};
  static constexpr int32_t MainLoopStages = {{ _main_loop_stages }}; 
  return cutlass_scaled_mm_sm{{ _arch }}_impl_{{ _dtype_str }}<
      TileShape,
      WarpShape,
      InstructionShape,
      ThreadBlockSwizzle,
      GemmMode,
      MainLoopStages,
      FP8MathOperator>(out, a, b, a_scales, b_scales, bias);
}
