name: Build docker image
description: 'build docker image for nm-vllm'
inputs:
  docker_tag:
    description: "tag to be used for the docker image"
    type: string
    required: true
  extra_tag:
    description: "additional tag for the docker image"
    type: string
    required: true
  build_type:
    description: "type of nm-vllm to install for the docker image: NIGHTLY (default) or RELEASE"
    type: string
    default: 'NIGHTLY'
  build_version:
    description: "version of nm-vllm to install for the docker image: latest (default) or specific version e.g. 0.4.0, 0.4.0.20240531"
    type: string
    default: 'latest'
runs:
  using: composite
  steps:
  - run: |
      # clean up
      docker stop $(docker ps -a -q) || echo 'no container to stop'
      docker rm $(docker ps -a -q) || echo 'no container to remove'
      docker rmi -f $(docker images -aq) || echo 'no image to remove'
      docker system prune --all --force
      # build
      status=0
      docker build --tag ghcr.io/neuralmagic/nm-vllm-openai:${{ inputs.docker_tag }} \
             --build-arg build_type=${{ inputs.build_type }} \
             --build-arg build_version=${{ inputs.build_version }} \
             --target vllm-openai . || status=$?
      if [ ${status} -eq 0 ]; then
          echo "Add tag ${{ inputs.extra_tag }} for "${{ inputs.build_type }}" build too"
          docker image tag ghcr.io/neuralmagic/nm-vllm-openai:${{ inputs.docker_tag }} ghcr.io/neuralmagic/nm-vllm-openai:${{ inputs.extra_tag }} || ((status+=$?))
      fi
      docker image ls -a
      echo "status=${status}" >> $GITHUB_OUTPUT
      echo "status=${status}"
      exit ${status}
    shell: bash
