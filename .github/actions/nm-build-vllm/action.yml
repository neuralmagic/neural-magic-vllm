name: build nm-vllm
description: 'build nm-vllm'
inputs:
  python:
    description: 'python version, e.g. 3.10.12'
    required: true
  venv:
    description: 'name for python virtual environment'
    required: true
outputs:
  whl_status:
    description: "final status from constructing the whl"
    value: ${{ steps.build.outputs.whl_status }}
  whl:
    description: 'basename for generated whl'
    value: ${{ steps.build.outputs.whl }}
  tarfile:
    description: 'basename for generated tar.gz'
    value: ${{ steps.build.outputs.tarfile }}
runs:
  using: composite
  steps:
  - id: build
    run: |
      COMMIT=${{ github.sha }}
      VENV="${{ inputs.venv }}-${COMMIT:0:7}"

      # add git commit hash to `vllm/version.py`
      echo "__commit__ = '$COMMIT'" >> vllm/version.py
      # update import line in `vllm/__init__.py`
      sed -i 's/import __version__/import __commit__, __version__/' vllm/__init__.py
      # update "__all__" list in `vllm/__init__.py`
      sed -i 's/"__version__",/"__commit__",\n    "__version__",/' vllm/__init__.py

      source $(pyenv root)/versions/${{ inputs.python }}/envs/${VENV}/bin/activate
      pip3 install -r requirements-cuda.txt -r requirements-build.txt
      # whl
      SUCCESS=0
      python setup.py bdist_wheel --dist-dir=dist --py-limited-api=cp38 || SUCCESS=$?
      echo "whl_status=${SUCCESS}" >> "$GITHUB_OUTPUT"
      ls -alh dist
      WHL_FILEPATH=$(find dist -type f -iname "*linux_x86_64.whl")
      echo "whl: ${WHL_FILEPATH}"
      RENAME=$(echo ${WHL_FILEPATH} | sed -e 's/linux_x86_64/manylinux_2_17_x86_64/')
      echo "rename: ${RENAME}"
      mv ${WHL_FILEPATH} ${RENAME}
      WHL=$(basename ${RENAME})
      echo "whl=${WHL}" >> "$GITHUB_OUTPUT"
      if [ ${SUCCESS} -ne 0 ]; then
        exit 1
      fi
      # sdist
      python setup.py sdist || SUCCESS=$?
      pyenv uninstall --force ${{ inputs.python}}/envs/${VENV}
      ls -alh dist
      TAR_FILEPATH=$(find dist -type f -iname "*.tar.gz")
      echo "${TAR_FILEPATH}"
      TARFILE=$(basename ${TAR_FILEPATH})
      echo "tarfile=${TARFILE}" >> "$GITHUB_OUTPUT"
      exit ${SUCCESS}
    shell: bash
