name: summary
description: 'creates a neuralmagic GHA run summary'
inputs:
  test_label:
    description: 'GHA runner label'
    required: true
  gitref:
    description: 'git commit hash or branch name'
    required: true
  testmo_run_url:
    description: 'testmo URL for this particular run'
    required: true
  python:
    description: 'python version info'
    required: true
  whl:
    description: 'whl file tested'
    required: true
  magic_wand:
    description: 'magic_wand version'
    required: true
  test_status:
    description: 'status from test step'
    required: true
  coverage_json:
    description: 'file containing coverage report in JSON format'
    required: true
runs:
  using: composite
  steps:
  - run: |
      TESTMO_URL=${{ inputs.testmo_run_url }}
      TEST_STATUS=${{ inputs.test_status }}
      TEST_EMOJI=$(./.github/scripts/step-status ${TEST_STATUS})
      echo "| Parameter | |" >> $GITHUB_STEP_SUMMARY
      echo "|---|---|" >> $GITHUB_STEP_SUMMARY
      echo "| label: | \`${{ inputs.test_label }}\` |" >> $GITHUB_STEP_SUMMARY
      echo "| git sha: | \`${{ github.sha }}\` |" >> $GITHUB_STEP_SUMMARY
      echo "| github actor: | '${{ github.actor }}' |" >> $GITHUB_STEP_SUMMARY
      echo "| gitref: | '${{ inputs.gitref }}' |" >> $GITHUB_STEP_SUMMARY
      echo "| branch name: | '${{ github.ref_name }}' |" >> $GITHUB_STEP_SUMMARY
      echo "| python: | ${{ inputs.python }} |" >> $GITHUB_STEP_SUMMARY
      echo "| whl: | ${{ inputs.whl }} |" >> $GITHUB_STEP_SUMMARY
      echo "| magic_wand: | ${{ inputs.magic_wand }} |" >> $GITHUB_STEP_SUMMARY
      echo "| test: | ${TEST_EMOJI} |" >> $GITHUB_STEP_SUMMARY
      echo "" >> $GITHUB_STEP_SUMMARY
      echo "#### TestMo URL: ${TESTMO_URL}" >> $GITHUB_STEP_SUMMARY
      echo "## Test Coverage" >> $GITHUB_STEP_SUMMARY
      # coverage_report_breakdown.py requires the `tabulate` package
      # to generate the markdown for the summary.
      pip3 install tabulate
      # As a multiline response we cannot pass the table directly to github
      # so redirect it to a file, then cat the file to the output
      python3 ./.github/scripts/coverage_report_breakdown.py ${{ inputs.coverage_json }} > COVERAGE_MD
      cat COVERAGE_MD >> $GITHUB_STEP_SUMMARY
    shell: bash
