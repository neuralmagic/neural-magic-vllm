name: install and test whl
description: 'install whl in venv and run tests'
inputs:
  pypi:
    description: 'ip address for pypi server'
    required: true
  python:
    description: 'python version, e.g. 3.10.12'
    required: true
  venv:
    description: 'name for python virtual environment'
    required: true
  test_skip_list:
    description: 'file containing tests to skip'
    required: true
  test_directory:
    description: 'directory to test files'
    required: true
  test_results:
    description: 'desired directory for test results'
    required: true
outputs:
  status:
    description: 'return test result'
    value: ${{ steps.whl_install_test.outputs.status }}
  whl:
    description: 'whl used for testing'
    value: ${{ steps.whl_install_test.outputs.whl }}
  magic_wand:
    description: 'magic_wand whl'
    value: ${{ steps.whl_install_test.outputs.magic_wand }}
runs:
  using: composite
  steps:
    - id: whl_install_test
      run: |
        # move source directories
        mv vllm vllm-ignore
        mv csrc csrc-ignore
        # activate venv and installs
        if [ -n "${{ inputs.venv }}" ]; then
          COMMIT=${{ github.sha }}
          VENV="${{ inputs.venv }}-${COMMIT:0:7}"
          source $(pyenv root)/versions/${{ inputs.python }}/envs/${VENV}/bin/activate
        fi
        pip3 install coverage
        pip3 install pytest-cov
        pip3 install pytest-xdist
        pip3 install -r requirements-dev.txt
        BASE=$(./.github/scripts/convert-version ${{ inputs.python }})
        WHL=$(find . -type f -iname "*${BASE}*.whl")
        WHL_BASENAME=$(basename ${WHL})
        echo "whl=${WHL_BASENAME}" >> "$GITHUB_OUTPUT"
        pip3 install ${WHL}[sparse] --extra-index-url https://pypi.neuralmagic.com/simple
        # report magic_wand version
        MAGIC_WAND=$(pip3 show nm-magic-wand-nightly | grep "Version" | cut -d' ' -f2) || echo "nightly not installed"
        if [ -z "${MAGIC_WAND}" ]; then
          # if neither magic-wand nor magic-wand-nightly is installed stop here with error
          MAGIC_WAND=$(pip3 show nm-magic-wand | grep "Version" | cut -d' ' -f2)
        fi
        echo "magic_wand=${MAGIC_WAND}" >> "$GITHUB_OUTPUT"
        # test and collect code coverage
        SUCCESS=0
        PYTHON_MAJOR_MINOR=$(echo "python${{ inputs.python }}" | cut -d'.' -f1,2)
        VLLM_SRC=$(python -c "import vllm; print(vllm.__path__[0])")
        ./.github/scripts/run-tests -s ${VLLM_SRC} -t ${{ inputs.test_directory }} -r ${{ inputs.test_results }} -f ${{ inputs.test_skip_list }}|| SUCCESS=$?
        echo "status=${SUCCESS}" >> "$GITHUB_OUTPUT"
        exit ${SUCCESS}
      shell: bash
