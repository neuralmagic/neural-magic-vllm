name: nm upload assets to GCP
run-name: ${{ github.actor }} publishing whl on branch '${{ github.ref}}'
on:

    workflow_call:
        inputs:
            label:
                description: "requested runner label (specifies instance)"
                type: string
                required: true
            timeout:
                description: "time limit for run in minutes "
                type: string
                required: true
            gitref:
                description: 'git commit hash or branch name'
                type: string
                required: true

    workflow_dispatch:
        inputs:
            label:
                description: "requested runner label (specifies instance)"
                type: string
                required: true
            timeout:
                description: "time limit for run in minutes "
                type: string
                required: true
            gitref:
                description: 'git commit hash or branch name'
                type: string
                required: true

    push:
        branches:
          - docker

jobs:

    PUBLISH:
        #runs-on: ${{ inputs.label }}
        #timeout-minutes: ${{ fromJson(inputs.timeout) }}
        runs-on: "gcp-k8s-util"
        timeout-minutes: 30

        permissions:
            contents: 'read'
            id-token: 'write'

        steps:

            - name: install automation components
              run: |
                sudo apt-get update --fix-missing
                sudo apt-get install -y git-all
                sudo apt-get install -y curl

            - name: checkout
              id: checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                #ref: ${{ inputs.gitref }}
                ref: "docker"
                submodules: recursive

#            - name: setenv
#              id: setenv
#              uses: ./.github/actions/nm-set-env/

#            - name: download assets
#              id: download_whl
#              uses: actions/download-artifact@v4
#              with:
#                  path: assets

#            # GCP
#            - name: 'Authenticate to Google Cloud'
#              id: auth
#              uses: google-github-actions/auth@v2.1.3
#              with:
#                  project_id: ${{ secrets.GCP_PROJECT }}
#                  workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
#                  service_account: ${{ secrets.NM_PYPI_SA }}

#            - name: 'Set up Cloud SDK'
#              uses: 'google-github-actions/setup-gcloud@v2'
#              with:
#                  version: '>= 473.0.0'

#            - name: cp assets
#              id: cp-assets
#              uses: ./.github/actions/nm-cp-assets/

#            - name: trigger stratus nm-pypi update workflow
#              run: |
#                  # Set the required variables
#                  event_type="trigger-workflow" 
#                  service=${{ github.event.inputs.target_service }}"
#                  version="${{ github.event.inputs.target_version }}"
  
#                  curl -L \
#                    -X POST \
#                    -H "Accept: application/vnd.github+json" \
#                    -H "Authorization: Bearer ${{ secrets.CICD_GITHUB_PAT }}" \
#                    -H "X-GitHub-Api-Version: 2022-11-28" \
#                    https://api.github.com/repos/neuralmagic/stratus/dispatches \
#                    -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"service\": \"$service\", \"version\": \"$version\", \"unit\": false, \"integration\": true}}"

            - name: trigger stratus nm-pypi update workflow
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.CICD_GITHUB_PAT }}
              script: |
                  const result = await github.rest.actions.createWorkflowDispatch({
                  owner: 'neuralmagic',
                  repo: 'stratus',
                  workflow_id: 'nm-pypi-update.yml'
                  ref: 'trigger'
                })
                console.log(result)
