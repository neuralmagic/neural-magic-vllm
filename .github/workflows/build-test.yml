name: build-test
on:
  # makes workflow reusable
  workflow_call:
    inputs:
      label:
        description: "requested runner label (specifies instance)"
        type: string
        required: true
      timeout:
        description: "time limit for run in minutes "
        type: string
        required: true
      gitref:
        description: "git commit hash or branch name"
        type: string
        required: true
      Gi_per_thread:
        description: 'requested GiB to reserve per thread'
        type: string
        required: true
      python:
        description: "python version, e.g. 3.10.12"
        type: string
        required: true

  # makes workflow manually callable
  workflow_dispatch:
    inputs:
      label:
        description: "requested runner label (specifies instance)"
        type: string
        required: true
      timeout:
        description: "time limit for run in minutes "
        type: string
        required: true
      gitref:
        description: "git commit hash or branch name"
        type: string
        required: true
      Gi_per_thread:
        description: 'requested GiB to reserve per thread'
        type: string
        required: true
      python:
        description: "python version, e.g. 3.10.12"
        type: string
        required: true

jobs:

    BUILD-TEST:

        runs-on: ${{ inputs.label }}
        timeout-minutes: ${{ fromJson(inputs.timeout) }}

        steps:

            - name: checkout
              id: checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                ref: ${{ inputs.gitref }}
                submodules: recursive

            - name: setenv
              id: setenv
              uses: ./.github/actions/nm-set-env/
              with:
                hf_token: ${{ secrets.NM_HF_TOKEN }}
                Gi_per_thread: ${{ inputs.Gi_per_thread }}

            - name: set python
              id: set_python
              uses: ./.github/actions/nm-set-python/
              with:
                python: ${{ inputs.python }}
                venv: TEST

            - name: hf cache
              id: hf_cache
              uses: ./.github/actions/nm-hf-cache/
              with:
                fs_cache: ${{ secrets.HF_FS_CACHE }}

            # TODO: testmo source is currently hardcoded.
            - name: create testmo run
              id: create_testmo_run
              uses: ./.github/actions/nm-testmo-run-create/
              if: success() || failure()
              with:
                testmo_url: https://neuralmagic.testmo.net
                testmo_token: ${{ secrets.TESTMO_TEST_TOKEN }}
                source: 'build-test'

            - name: python lint
              id: lint
              uses: ./.github/actions/nm-lint-python/

            - name: build
              id: build
              uses: ./.github/actions/nm-build-vllm/
              with:
                Gi_per_thread: ${{ inputs.Gi_per_thread }}
                python: ${{ inputs.python }}
                venv: TEST
                pypi: ${{ secrets.NM_PRIVATE_PYPI_LOCATION }}

            - name: test
              id: test
              uses: ./.github/actions/nm-test-vllm/
              with:
                test_directory: tests
                test_results: test-results
                python: ${{ inputs.python }}
                venv: TEST
                pypi: ${{ secrets.NM_PRIVATE_PYPI_LOCATION }}

            - name: report test results
              id: report_test
              uses: ./.github/actions/nm-testmo-run-submit-thread/
              if: success() || failure()
              with:
                testmo_url: https://neuralmagic.testmo.net
                testmo_token: ${{ secrets.TESTMO_TEST_TOKEN }}
                testmo_run_id: ${{ steps.create_testmo_run.outputs.id }}
                results: test-results
                step_status: ${{ steps.test.outputs.status }}

            - name: summary
              uses: ./.github/actions/nm-run-summary/
              if: success() || failure()
              with:
                label: ${{ inputs.label }}
                gitref: ${{ inputs.gitref }}
                testmo_run_url: https://neuralmagic.testmo.net/automation/runs/view/${{ steps.create_testmo_run.outputs.id }}
                python: ${{ steps.set_python.outputs.version }}
                lint_status: ${{ steps.lint.outputs.status }}
                build_status: ${{ steps.build.outputs.status }}
                test_status: ${{ steps.test.outputs.status }}

            - name: run status
              id: run_status
              if: success() || failure()
              env:
                CHECKOUT: ${{ steps.checkout.outcome }}
                LINT_STATUS: ${{ steps.lint.outputs.status }}
                BUILD_STATUS: ${{ steps.build.outputs.status }}
                TEST_STATUS: ${{ steps.test.outputs.status }}
              run: |
                  echo "checkout status: ${CHECKOUT}"
                  echo "lint status: ${LINT_STATUS}"
                  echo "build status: ${BUILD_STATUS}"
                  echo "test status: ${TEST_STATUS}"
                  if [[ "${CHECKOUT}" != *"success"* ]]; then exit 1; fi
                  if [ -z "${LINT_STATUS}" ] || [ "${LINT_STATUS}" -ne "0" ]; then exit 1; fi
                  if [ -z "${BUILD_STATUS}" ] || [ "${BUILD_STATUS}" -ne "0" ]; then exit 1; fi
                  if [ -z "${TEST_STATUS}" ] || [ "${TEST_STATUS}" -ne "0" ]; then exit 1; fi

            - name: complete testmo run
              uses: ./.github/actions/nm-testmo-run-complete/
              if: success() || failure()
              with:
                testmo_url: https://neuralmagic.testmo.net
                testmo_token: ${{ secrets.TESTMO_TEST_TOKEN }}
                testmo_run_id: ${{ steps.create_testmo_run.outputs.id }}
