[build-system]
# Should be mirrored in requirements-build.txt
requires = [
    "cmake>=3.21",
    "ninja",
    "packaging",
    "setuptools >= 49.4.0",
    "torch == 2.3.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[tool.ruff]
# Allow lines to be as long as 80.
line-length = 80
exclude = [
    # External file, leaving license intact
    "examples/fp8/quantizer/quantize.py"
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    # "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    # "I",
    "G",
]
ignore = [
    # star imports
    "F405", "F403",
    # lambda expression assignment
    "E731",
    # Loop control variable not used within loop body
    "B007",
]

[tool.mypy]
python_version = "3.8"

ignore_missing_imports = true
check_untyped_defs = true
follow_imports = "skip"

files = "vllm"
# TODO(woosuk): Include the code from Megatron and HuggingFace.
exclude = [
    "vllm/model_executor/parallel_utils/|vllm/model_executor/models/",
    # Ignore triton kernels in ops.
    'vllm/attention/ops/.*\.py$'
]

[tool.codespell]
ignore-words-list = "dout, te, indicies, subtile"
skip = "./tests/prompts,./benchmarks/sonnet.txt,./tests/lora/data,./build"

[tool.isort]
use_parentheses = true
skip_gitignore = true

[tool.pytest.ini_options]
markers = [
    "skip_global_cleanup",
    "vlm: run tests for vision language models only",
]

[tool.coverage.run]
# collect context info for reporting, e.g. which tests exercised a line
dynamic_context = "test_function"
# do not examine any files matching these patterns
omit = [
    # coverage for these devices is to be ignored until we plan to deploy them
    "*neuron*",
    "*cpu*",
    # these model pathways are to be ignored for now
    "*arctic*",
    "*falcon*",
    "*deepspeedfp*",
    # we are not testing AMD devices at the moment
    "**/rocm_flash_attn.py"
]

[tool.coverage.report]
# don't bother to report files w/out executable code, e.g. __init__.py
skip_empty = true
# coverage will not report on lines, or code blocks, matching these expressions
exclude_also = [
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@(abc\\.)?abstractmethod",
    # coverage for these devices is to be ignored until we plan to deploy them
    'engine_config.device_config.device_type == "cpu"',
    'engine_config.device_config.device_type == "neuron"',
    "elif is_neuron():",
    "elif is_cpu():",
    # customop.py has some placeholder code not yet executed
    "return self.forward_cuda",
    # ignore some legacy code that we won't support in nm-vllm
    "enable_hf_transfer()",
    "def convert_bin_to_safetensor_file",
    "def _shared_pointers",
    "def np_cache_weights_iterator",
    "def convert_pyslice_to_tensor",
]

[tool.coverage.html]
# include the context info in the HTML report
show_contexts = true

[tool.coverage.json]
# include the context info in the JSON report
show_contexts = true
